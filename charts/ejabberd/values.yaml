# Default values for ejabberd.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

ejabberd:
  virtualHost: jabber.example.local

## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
## @param global.storageClass Global StorageClass for Persistent Volume(s)
##
global:
  imageRegistry: ""
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  storageClass: ""

## @section eJabberd Image parameters
## eJabberd image version
## ref: https://hub.docker.com/r/ejabberd/ecs/tags/
## @param image.registry eJabberd image registry
## @param image.repository eJabberd image repository
## @param image.tag eJabberd image tag (immutable tags are recommended)
## @param image.pullPolicy eJabberd image pull policy
## @param image.pullSecrets Specify docker-registry secret names as an array
## @param image.debug Set to true if you would like to see extra information on logs
##
image:
  registry: docker.io
  repository: ejabberd/ecs
  tag: 21.07

  ## set to true if you would like to see extra information on logs
  ## It turns BASH and/or NAMI debugging in the image
  ##
  debug: false

  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: IfNotPresent

  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## Example:
  ## pullSecrets:
  ##   - myRegistryKeySecretName
  ##
  pullSecrets: []

## @section Common parameters

## @param nameOverride String to partially override ejabberd.fullname template (will maintain the release name)
##
nameOverride: ""

## @param fullnameOverride String to fully override ejabberd.fullname template
##
fullnameOverride: ""

## @param kubeVersion Force target Kubernetes version (using Helm capabilities if not set)
##
kubeVersion: ""

## @param clusterDomain Kubernetes Cluster Domain
##
clusterDomain: cluster.local

## @param extraDeploy Array of extra objects to deploy with the release
##
extraDeploy: []

## Enable diagnostic mode in the deployment
##
diagnosticMode:
  ## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
  ##
  enabled: false
  ## @param diagnosticMode.command Command to override all containers in the deployment
  ##
  command:
    - sleep
  ## @param diagnosticMode.args Args to override all containers in the deployment
  ##
  args:
    - infinity

## @param hostAliases Deployment pod host aliases
## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
##
hostAliases: []

## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}

## eJabberd Authentication parameters
##
auth:
  ## @param auth.erlangCookie Erlang cookie to determine whether different nodes are allowed to communicate with each other
  ## ref: https://github.com/processone/docker-ejabberd#environment-variables
  ##
  erlangCookie: ""

  ## @param auth.existingErlangSecret Existing secret with Erlang cookie (must contain a value for `ejabberd-erlang-cookie` key)
  ## e.g:
  ## existingErlangSecret: name-of-existing-secret
  ##
  existingErlangSecret: ""

  ## @param auth.adminPassword eJabberd admin password
  ##
  adminPassword: ""

  ## @param auth.existingAdminPasswordSecret Existing secret with eJabberd credentials (must contain a value for `ejabberd-admin-password` key)
  ## e.g:
  ## existingPasswordSecret: name-of-existing-secret
  ##
  existingAdminPasswordSecret: ""

  tls:
    enabled: false
    autoGenerated: false
    caCertificate: |-
    serverCertificate: |-
    serverKey: |-
    existingSecret: ""
    existingSecretFullChain: false

## Clustering settings
##
clustering:
  ## @param clustering.enabled Enable eJabberd clustering
  ##
  enabled: true

  ## @param clustering.addressType Switch clustering mode. Either `ip` or `hostname`
  ##
  addressType: hostname

## @param command Override default container command (useful when using custom images)
##
command: []

## @param args Override default container args (useful when using custom images)
args: []

## @param terminationGracePeriodSeconds Default duration in seconds k8s waits for container to exit before sending kill signal.
## Any time in excess of 10 seconds will be spent waiting for any synchronization necessary for cluster not to lose data.
##
terminationGracePeriodSeconds: 120

## @param extraEnvVars Extra environment variables to add to eJabberd pods
## E.g:
## extraEnvVars:
##   - name: FOO
##     value: BAR
##
extraEnvVars: []

## @param extraEnvVarsCM Name of existing ConfigMap containing extra environment variables
##
extraEnvVarsCM: ""

## @param extraEnvVarsSecret Name of existing Secret containing extra environment variables (in case of sensitive data)
##
extraEnvVarsSecret: ""

## @param extraContainerPorts Extra ports to be included in container spec, primarily informational
## E.g:
## extraContainerPorts:
## - name: new_port_name
##   containerPort: 1234
##
extraContainerPorts: []

## @param configuration [map] eJabberd Configuration files content.
## Do not override unless you know what you are doing.
##
configuration:
  ## @param configration.inetrc [string] eJabberd inetrc Configuration file content
  ##
  inetrc: |-
    {lookup,["file","native"]}.
    {host,{127,0,0,1}, ["localhost","@@HOSTNAME@@"]}.
    {file, resolv, "/etc/resolv.conf"}.

  ## @param configuration.ejabberdctl [string] ejabberdctl configuration file content
  ##
  ejabberdctl: |-

  ejabberd: |-
    hosts:
      - {{ .Values.ejabberd.virtualHost }}

    loglevel: 4
    log_rotate_size: 10485760
    log_rotate_date: ""
    log_rotate_count: 1
    log_rate_limit: 100

    {{- if (include "ejabberd.createTlsSecret" . ) }}
    certfiles:
      - "/home/ejabberd/certs/server_certificate.pem"
      - "/home/ejabberd/certs/server_key.pem"
    ca_file: "/home/ejabberd/certs/ca_certificate.pem"
    {{- end }}

    listen:
      - port: {{ .Values.service.c2s.port }}
        ip: "::"
        module: ejabberd_c2s
        max_stanza_size: 262144
        shaper: c2s_shaper
        access: c2s
        {{- if (include "ejabberd.createTlsSecret" . ) }}
        starttls_required: true
        {{ else }}
        starttls_required: false
        {{ end }}

      - port: {{ .Values.service.s2s.port }}
        ip: "::"
        module: ejabberd_s2s_in
        max_stanza_size: 524288

      - port: {{ .Values.service.https.port }}
        ip: "::"
        module: ejabberd_http
        {{- if (include "ejabberd.createTlsSecret" . ) }}
        tls: true
        {{- end }}
        request_handlers:
          "/admin": ejabberd_web_admin
          {{- if (include "ejabberd.createTlsSecret" . ) }}
          "/api": mod_http_api
          "/bosh": mod_bosh
          "/captcha": ejabberd_captcha
          "/upload": mod_http_upload
          "/ws": ejabberd_http_ws
          "/oauth": ejabberd_oauth
          {{- end }}

      - port: {{ .Values.service.http.port }}
        ip: "::"
        module: ejabberd_http
        request_handlers:
          "/admin": ejabberd_web_admin
          {{- if not (include "ejabberd.createTlsSecret" . ) }}
          "/api": mod_http_api
          "/bosh": mod_bosh
          "/captcha": ejabberd_captcha
          "/upload": mod_http_upload
          "/ws": ejabberd_http_ws
          "/oauth": ejabberd_oauth
          {{- end }}

      - port: {{ .Values.service.mqtt.port }}
        ip: "::"
        module: mod_mqtt
        backlog: 1000

    {{- if (include "ejabberd.createTlsSecret" . ) }}
    s2s_use_starttls: optional
    {{ else }}
    s2s_use_starttls: false
    {{ end }}

    acl:
      local:
        user_regexp: ""
      loopback:
        ip:
          - 127.0.0.0/8
          - ::1/128
          - ::FFFF:127.0.0.1/128
      admin:
        user:
          - "admin@{{ .Values.ejabberd.virtualHost }}"

    access_rules:
      local:
        allow: local
      c2s:
        deny: blocked
        allow: all
      announce:
        allow: admin
      configure:
        allow: admin
      muc_create:
        allow: local
      pubsub_createnode:
        allow: local
      trusted_network:
        allow: loopback

    api_permissions:
      "console commands":
        from:
          - ejabberd_ctl
        who: all
        what: "*"
      "admin access":
        who:
          access:
            allow:
              acl: loopback
              acl: admin
          oauth:
            scope: "ejabberd:admin"
            access:
              allow:
                acl: loopback
                acl: admin
        what:
          - "*"
          - "!stop"
          - "!start"
      "public commands":
        who:
          ip: 127.0.0.1/8
        what:
          - status
          - connected_users_number

    shaper:
      normal: 1000
      fast: 50000

    shaper_rules:
      max_user_sessions: 10
      max_user_offline_messages:
        5000: admin
        100: all
      c2s_shaper:
        none: admin
        normal: all
      s2s_shaper: fast

    max_fsm_queue: 10000

    modules:
      mod_adhoc: {}
      mod_admin_extra: {}
      mod_announce:
        access: announce
      mod_avatar: {}
      mod_blocking: {}
      mod_bosh: {}
      mod_caps: {}
      mod_carboncopy: {}
      mod_client_state: {}
      mod_configure: {}
      mod_disco: {}
      mod_fail2ban: {}
      mod_http_api: {}
      mod_http_upload:
        {{- if (include "ejabberd.createTlsSecret" . ) }}
        put_url: https://@HOST@:5443/upload
        {{- else }}
        put_url: http://@HOST@:5280/upload
        {{- end }}
      mod_last: {}
      mod_mam:
        ## Mnesia is limited to 2GB, better to use an SQL backend
        ## For small servers SQLite is a good fit and is very easy
        ## to configure. Uncomment this when you have SQL configured:
        ## db_type: sql
        assume_mam_usage: true
        default: never
      mod_mqtt: {}
      mod_muc:
        access:
          - allow
        access_admin:
          - allow: admin
        access_create: muc_create
        access_persistent: muc_create
        access_mam:
          - allow
        default_room_options:
          allow_subscription: true  # enable MucSub
          mam: false
      mod_muc_admin: {}
      mod_offline:
        access_max_user_messages: max_user_offline_messages
      mod_ping: {}
      mod_privacy: {}
      mod_private: {}
      mod_proxy65:
        access: local
        max_connections: 5
      mod_pubsub:
        access_createnode: pubsub_createnode
        plugins:
          - flat
          - pep
        force_node_config:
          ## Avoid buggy clients to make their bookmarks public
          storage:bookmarks:
            access_model: whitelist
      mod_push: {}
      mod_push_keepalive: {}
      mod_register:
        ## Only accept registration requests from the "trusted"
        ## network (see access_rules section above).
        ## Think twice before enabling registration from any
        ## address. See the Jabber SPAM Manifesto for details:
        ## https://github.com/ge0rg/jabber-spam-fighting-manifesto
        ip_access: trusted_network
      mod_roster:
        versioning: true
      mod_sip: {}
      mod_s2s_dialback: {}
      mod_shared_roster: {}
      mod_stream_mgmt:
        resend_on_timeout: if_offline
      mod_vcard: {}
      mod_vcard_xupdate: {}
      mod_version:
        show_os: false

## @param extraConfiguration [string] Configuration file content: extra configuration to be appended to eJabberd configuration
## Use this instead of `configuration` to add more configuration
##
extraConfiguration: |-

## @param advancedConfiguration Configuration file content: advanced configuration
##
advancedConfiguration: |-

## @param extraVolumeMounts Optionally specify extra list of additional volumeMounts
## Examples:
## extraVolumeMounts:
##   - name: extras
##     mountPath: /usr/share/extras
##     readOnly: true
##
extraVolumeMounts: []

## @param extraVolumes Optionally specify extra list of additional volumes .
## Example:
## extraVolumes:
##   - name: extras
##     emptyDir: {}
##
extraVolumes: []

## @param extraSecrets Optionally specify extra secrets to be created by the chart.
## This can be useful when combined with load_definitions to automatically create the secret containing the definitions to be loaded.
## Example:
## extraSecrets:
##   load-definition:
##     load_definition.json: |
##       {
##         ...
##       }
##
extraSecrets: {}

## @param extraSecretsPrependReleaseName Set this flag to true if extraSecrets should be created with <release-name> prepended.
##
extraSecretsPrependReleaseName: false

## @section Statefulset parameters

## @param replicaCount Number of eJabberd replicas to deploy
##
replicaCount: 1

## @param schedulerName Use an alternate scheduler, e.g. "stork".
## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
##
schedulerName: ""

## @param podManagementPolicy Pod management policy
##
podManagementPolicy: OrderedReady

## @param podLabels eJabberd Pod labels. Evaluated as a template
## Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
##
podLabels: {}

## @param podAnnotations eJabberd Pod annotations. Evaluated as a template
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
##
podAnnotations: {}

## @param updateStrategyType Update strategy type for eJabberd statefulset
## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
##
updateStrategyType: RollingUpdate

## @param statefulsetLabels eJabberd statefulset labels. Evaluated as a template
## Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
##
statefulsetLabels: {}

## @param priorityClassName Name of the priority class to be used by eJabberd pods, priority class needs to be created beforehand
## Ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
##
priorityClassName: ""

## @param podAffinityPreset Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAffinityPreset: ""

## @param podAntiAffinityPreset Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAntiAffinityPreset: soft

## Node affinity preset
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
##
nodeAffinityPreset:
  ## @param nodeAffinityPreset.type Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
  ##
  type: ""
  ## @param nodeAffinityPreset.key Node label key to match Ignored if `affinity` is set.
  ## E.g.
  ## key: "kubernetes.io/e2e-az-name"
  ##
  key: ""
  ## @param nodeAffinityPreset.values Node label values to match. Ignored if `affinity` is set.
  ## E.g.
  ## values:
  ##   - e2e-az1
  ##   - e2e-az2
  ##
  values: []

## @param affinity Affinity for pod assignment. Evaluated as a template
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
## Note: podAffinityPreset, podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
##
affinity: {}

## @param nodeSelector Node labels for pod assignment. Evaluated as a template
## ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}

## @param tolerations Tolerations for pod assignment. Evaluated as a template
## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []

## @param topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template
## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
##
topologySpreadConstraints: {}

## eJabberd pods' Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
## @param podSecurityContext.enabled Enable eJabberd pods' Security Context
## @param podSecurityContext.fsGroup Group ID for the filesystem used by the containers
## @param podSecurityContext.runAsUser User ID for the service user running the pod
##
podSecurityContext:
  enabled: true
  fsGroup: 9000
  runAsUser: 9000

## @param containerSecurityContext eJabberd containers' Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
## Example:
##   containerSecurityContext:
##     capabilities:
##       drop: ["NET_RAW"]
##     readOnlyRootFilesystem: true
##
containerSecurityContext: {}

## eJabberd containers' resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
## We usually recommend not to specify default resources and to leave this as a conscious
## choice for the user. This also increases chances charts run on environments with little
## resources, such as Minikube. If you do want to specify resources, uncomment the following
## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
## @param resources.limits The resources limits for eJabberd containers
## @param resources.requests The requested resources for eJabberd containers
##
resources:
  ## Example:
  ## limits:
  ##   cpu: 200m
  ##   memory: 256Mi
  limits: {}
  ## Example
  ## requests:
  ##   cpu: 100m
  ##   memory: 128Mi
  requests: {}

## Configure eJabberd containers' extra options for liveness probe
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
## @param livenessProbe.enabled Enable livenessProbe
## @param livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
## @param livenessProbe.periodSeconds Period seconds for livenessProbe
## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
## @param livenessProbe.failureThreshold Failure threshold for livenessProbe
## @param livenessProbe.successThreshold Success threshold for livenessProbe
##
livenessProbe:
  enabled: true
  initialDelaySeconds: 120
  timeoutSeconds: 20
  periodSeconds: 30
  failureThreshold: 6
  successThreshold: 1

## Configure eJabberd containers' extra options for readiness probe
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
## @param readinessProbe.enabled Enable readinessProbe
## @param readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
## @param readinessProbe.periodSeconds Period seconds for readinessProbe
## @param readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
## @param readinessProbe.failureThreshold Failure threshold for readinessProbe
## @param readinessProbe.successThreshold Success threshold for readinessProbe
##
readinessProbe:
  enabled: true
  initialDelaySeconds: 10
  timeoutSeconds: 20
  periodSeconds: 30
  failureThreshold: 3
  successThreshold: 1

## @param customLivenessProbe Override default liveness probe
##
customLivenessProbe: {}

## @param customReadinessProbe Override default readiness probe
##
customReadinessProbe: {}

## @param customStartupProbe Define a custom startup probe
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-startup-probes
##
customStartupProbe: {}

## @param initContainers Add init containers to the eJabberd pod
## Example:
## initContainers:
##   - name: your-image-name
##     image: your-image
##     imagePullPolicy: Always
##     ports:
##       - name: portname
##         containerPort: 1234
##
initContainers: []

## @param sidecars Add sidecar containers to the eJabberd pod
## Example:
## sidecars:
##   - name: your-image-name
##     image: your-image
##     imagePullPolicy: Always
##     ports:
##       - name: portname
##         containerPort: 1234
##
sidecars: []

## Pod Disruption Budget configuration
## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
##
pdb:
  ## @param pdb.create Enable/disable a Pod Disruption Budget creation
  ##
  create: false

  ## @param pdb.minAvailable Minimum number/percentage of pods that should remain scheduled
  ##
  minAvailable: 1
  ## @param pdb.maxUnavailable Maximum number/percentage of pods that may be made unavailable
  ##
  maxUnavailable: ""

## @section RBAC parameters

## eJabberd pods ServiceAccount
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
##
serviceAccount:
  ## @param serviceAccount.create Enable creation of ServiceAccount for eJabberd pods
  ##
  create: true

  ## @param serviceAccount.name Name of the created serviceAccount
  ## If not set and create is true, a name is generated using the ejabberd.fullname template
  ##
  name: ""

## Role Based Access
## ref: https://kubernetes.io/docs/admin/authorization/rbac/
##
rbac:
  ## @param rbac.create Whether RBAC rules should be created
  ## binding eJabberd ServiceAccount to a role
  ## that allows eJabberd pods querying the K8s API
  ##
  create: true

## @section Persistence parameters

persistence:
  database:
    ## @param persistence.database.enabled Enable eJabberd database persistence using PVC
    ##
    enabled: false

    ## @param persistence.database.storageClass PVC Storage Class for eJabberd database volume
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass: ""

    ## @param persistence.database.selector Selector to match an existing Persistent Volume
    ## selector:
    ##   matchLabels:
    ##     app: my-app
    ##
    selector: {}

    ## @param persistence.database.accessMode PVC Access Mode for eJabberd database volume
    ##
    accessMode: ReadWriteOnce

    ## @param persistence.database.existingClaim Provide an existing PersistentVolumeClaims
    ## The value is evaluated as a template
    ## So, for example, the name can depend on .Release or .Chart
    ##
    existingClaim: ""

    ## @param persistence.database.size PVC Storage Request for eJabberd database volume
    ##
    size: 1Gi

    ## @param persistence.database.annotations Persistence annotations. Evaluated as a template
    ## Example:
    ## annotations:
    ##   example.io/disk-volume-type: SSD
    ##
    annotations: {}

  upload:
    ## @param persistence.upload.enabled Enable eJabberd upload persistence using PVC
    ##
    enabled: false

    ## @param persistence.upload.storageClass PVC Storage Class for eJabberd upload volume
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass: ""

    ## @param persistence.upload.selector Selector to match an existing Persistent Volume
    ## selector:
    ##   matchLabels:
    ##     app: my-app
    ##
    selector: {}

    ## @param persistence.upload.accessMode PVC Access Mode for eJabberd upload volume
    ##
    accessMode: ReadWriteOnce

    ## @param persistence.upload.existingClaim Provide an existing PersistentVolumeClaims
    ## The value is evaluated as a template
    ## So, for example, the name can depend on .Release or .Chart
    ##
    existingClaim: ""

    ## @param persistence.upload.size PVC Storage Request for eJabberd upload volume
    ##
    size: 10Gi

    ## @param persistence.upload.annotations Persistence annotations. Evaluated as a template
    ## Example:
    ## annotations:
    ##   example.io/disk-volume-type: SSD
    ##
    annotations: {}

  ## @param persistence.volumes Additional volumes without creating PVC
  ##  - name: volume_name
  ##    emptyDir: {}
  ##
  volumes: []

## @section Exposure parameters

## Kubernetes service type
##
service:
  ## @param service.type Kubernetes Service type
  ##
  type: ClusterIP

  c2s:
    ## @param service.c2s.port c2s port
    ##
    port: 5222

    ## @param service.c2s.portName c2s service port name
    ##
    portName: c2s

    ## @param service.c2s.nodePort Node port override for `c2s` port, if serviceType is `NodePort` or `LoadBalancer`
    ##
    nodePort: ""

  s2s:
    ## @param service.s2s.Port s2s port
    ##
    port: 5269

    ## @param service.s2s.portName s2s service port name
    ##
    portName: s2s

    ## @param service.s2s.nodePort Node port override for `s2s` port, if serviceType is `NodePort` or `LoadBalancer`
    ##
    nodePort: ""

  http:
    ## @param service.http.port http port
    ##
    port: 5280

    ## @param service.http.portName http service port name
    ##
    portName: http

    ## @param service.http.nodePort Node port override for `http` port, if serviceType is `NodePort` or `LoadBalancer`
    ##
    nodePort: ""

  https:
    ## @param service.https.port https port
    ##
    port: 5443

    ## @param service.https.portName https service port name
    ##
    portName: https

    ## @param service.https.nodePort Node port override for `https` port, if serviceType is `NodePort` or `LoadBalancer`
    ##
    nodePort: ""

  mqtt:
    ## @param service.mqtt.port mqtt port
    ##
    port: 1883

    ## @param service.mqtt.portName mqtt service port name
    ##
    portName: mqtt

    ## @param service.mqtt.nodePort Node port override for `mqtt` port, if serviceType is `NodePort` or `LoadBalancer`
    ##
    nodePort: ""

  ## @param service.extraPorts Extra ports to expose in the service
  ## E.g.:
  ## extraPorts:
  ## - name: new_svc_name
  ##   port: 1234
  ##   targetPort: 1234
  ##
  extraPorts: []

  ## @param service.loadBalancerSourceRanges Address(es) that are allowed when service is `LoadBalancer`
  ## https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
  ## e.g:
  ## loadBalancerSourceRanges:
  ## - 10.10.10.0/24
  ##
  loadBalancerSourceRanges: []

  ## @param service.externalIPs Set the ExternalIPs
  ##
  externalIPs: []

  ## @param service.externalTrafficPolicy Enable client source IP preservation
  ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
  ##
  externalTrafficPolicy: Cluster

  ## @param service.loadBalancerIP Set the LoadBalancerIP
  ##
  loadBalancerIP: ""

  ## @param service.labels Service labels. Evaluated as a template
  ##
  labels: {}

  ## @param service.annotations Service annotations. Evaluated as a template
  ## Example:
  ## annotations:
  ##   service.beta.kubernetes.io/aws-load-balancer-internal: 0.0.0.0/0
  ##
  annotations: {}

  ## @param service.annotationsHeadless Headless Service annotations. Evaluated as a template
  ## Example:
  ## annotations:
  ##   external-dns.alpha.kubernetes.io/internal-hostname: jabber.example.local
  ##
  annotationsHeadless: {}

## Configure the ingress resource that allows you to access the
## eJabberd installation. Set up the URL
## ref: http://kubernetes.io/docs/user-guide/ingress/
##
ingress:
  ## @param ingress.enabled Enable ingress resource for Web UI
  ##
  enabled: false

  ## @param ingress.path Path for the default host. You may need to set this to '/*' in order to use this with ALB ingress controllers.
  ##
  path: /

  ## @param ingress.pathType Ingress path type
  ##
  pathType: ImplementationSpecific

  ## @param ingress.hostname Default host for the ingress resource
  ##
  hostname: jabber.example.local

  ## @param ingress.annotations Ingress annotations
  ## For a full list of possible ingress annotations, please see
  ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md
  ##
  ## If certManager is set to true, annotation kubernetes.io/tls-acme: "true" will automatically be set
  ##
  annotations: {}

  ## @param ingress.tls Enable TLS configuration for the hostname defined at `ingress.hostname` parameter
  ## TLS certificates will be retrieved from a TLS secret with name: {{- printf "%s-tls" .Values.ingress.hostname }}
  ## You can:
  ##   - Use the `ingress.secrets` parameter to create this TLS secret
  ##   - Relay on cert-manager to create it by setting `ingress.certManager=true`
  ##   - Relay on Helm to create self-signed certificates by setting `ingress.selfSigned=true`
  ##
  tls: false

  ## @param ingress.certManager Set this to true in order to add the corresponding annotations for cert-manager
  ## to generate a TLS secret for the ingress record
  ##
  certManager: false

  ## @param ingress.selfSigned Set this to true in order to create a TLS secret for this ingress record
  ## using self-signed certificates generated by Helm
  ##
  selfSigned: false

   ## @param ingress.extraHosts The list of additional hostnames to be covered with this ingress record.
  ## Most likely the hostname above will be enough, but in the event more hosts are needed, this is an array
  ## e.g:
  ## extraHosts:
  ##   - name: jabber.example.local
  ##     path: /
  ##
  extraHosts: []

  ## @param ingress.extraTls The tls configuration for additional hostnames to be covered with this ingress record.
  ## see: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
  ## e.g:
  ## extraTls:
  ##   - hosts:
  ##       - jabber.example.local
  ##     secretName: jabber.example.local-tls
  ##
  extraTls: []

  ## @param ingress.secrets Custom TLS certificates as secrets
  ## NOTE: 'key' and 'certificate' are expected in PEM format
  ## NOTE: 'name' should line up with a 'secretName' set further up
  ## If it is not set and you're using cert-manager, this is unneeded, as it will create a secret for you with valid certificates
  ## If it is not set and you're NOT using cert-manager either, self-signed certificates will be created valid for 365 days
  ## It is also possible to create and manage the certificates outside of this helm chart
  ## Please see README.md for more information
  ## e.g:
  ## secrets:
  ##   - name: jabber.example.local-tls
  ##     key: |-
  ##       -----BEGIN RSA PRIVATE KEY-----
  ##       ...
  ##       -----END RSA PRIVATE KEY-----
  ##     certificate: |-
  ##       -----BEGIN CERTIFICATE-----
  ##       ...
  ##       -----END CERTIFICATE-----
  ##
  secrets: []

  ## @param ingress.ingressClassName IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
  ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster .
  ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
  ##
  ingressClassName: ""

## Network Policy configuration
## ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
##
networkPolicy:
  ## @param networkPolicy.enabled Enable creation of NetworkPolicy resources
  ##
  enabled: false

  ## @param networkPolicy.allowExternal Don't require client label for connections
  ## The Policy model to apply. When set to false, only pods with the correct
  ## client label will have network access to the ports eJabberd is listening
  ## on. When true, eJabberd will accept connections from any source
  ## (with the correct destination port).
  ##
  allowExternal: true

  ## @param networkPolicy.additionalRules Additional NetworkPolicy Ingress "from" rules to set. Note that all rules are OR-ed.
  ## e.g:
  ## additionalRules:
  ##  - matchLabels:
  ##    - role: frontend
  ##  - matchExpressions:
  ##    - key: role
  ##      operator: In
  ##      values:
  ##        - frontend
  ##
  additionalRules: []

## TODO: @section Metrics Parameters

## Prometheus Metrics
##
#metrics:

## @section Init Container Parameters

## Init Container parameters
## Change the owner and group of the persistent volume(s) mountpoint(s) to 'runAsUser:fsGroup' on each component
## values from the securityContext section of the component
##
volumePermissions:
  ## @param volumePermissions.enabled Enable init container that changes the owner and group of the persistent volume(s) mountpoint to `runAsUser:fsGroup`
  ##
  enabled: false

  ## @param volumePermissions.image.registry Init container volume-permissions image registry
  ## @param volumePermissions.image.repository Init container volume-permissions image repository
  ## @param volumePermissions.image.tag Init container volume-permissions image tag
  ## @param volumePermissions.image.pullPolicy Init container volume-permissions image pull policy
  ## @param volumePermissions.image.pullSecrets Specify docker-registry secret names as an array
  ##
  image:
    registry: docker.io
    repository: bitnami/bitnami-shell
    tag: 10-debian-10-r180

    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: Always

    ## Optionally specify an array of imagePullSecrets (secrets must be manually created in the namespace)
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## Example:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []

  ## Init Container resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  ## @param volumePermissions.resources.limits Init container volume-permissions resource limits
  ## @param volumePermissions.resources.requests Init container volume-permissions resource requests
  ##
  resources:
    ## Example:
    ## limits:
    ##    cpu: 100m
    ##    memory: 128Mi
    limits: {}
    ## Examples:
    ## requests:
    ##    cpu: 100m
    ##    memory: 128Mi
    requests: {}
